{"Assumptions. The assumptions are as follows.\nA1 _SYMBOL0_\nA2 _SYMBOL1_\nA3 _SYMBOL2_\nA4 _SYMBOL3_\nA5 _SYMBOL4_\nA6 _SYMBOL5_\nA7 _SYMBOL6_\n\nGuarantees. The guarantees are as follows.\nG1 _SYMBOL7_\nG2 _SYMBOL8_\nG3 _SYMBOL9_\nG4 _SYMBOL10_\nG5 _SYMBOL11_\nG6 _SYMBOL12_\nG7 _SYMBOL13_\nG8 _SYMBOL14_\nG9 _SYMBOL15_": ["((_SYMBOL0_) && (_SYMBOL1_) && (_SYMBOL2_) && (_SYMBOL3_) && (_SYMBOL4_) && (_SYMBOL5_) && (_SYMBOL6_)) -> ((_SYMBOL7_) && (_SYMBOL8_) && (_SYMBOL9_) && (_SYMBOL10_) && (_SYMBOL11_) && (_SYMBOL12_) && (_SYMBOL13_) && (_SYMBOL14_) && (_SYMBOL15_))"], "When _SYMBOL0_, _SYMBOL1_.": ["G ((_SYMBOL0_) -> (_SYMBOL1_))"], "First transfer of any sequence is NONSEQ in nature.": ["G (_start_ -> (_htransnonseq_))"], "Non-first transfer of an AHB sequence will always be SEQ in nature.": ["G (!_last_ && (_htransnonseq_) && _hready_ -> X (_htransseq_))"], "Burst sequence of length four shall end at fourth occurrence of HREADY.": ["G ((_hlock_ && (_hburstincr4_) && _hready_ && (_htransnonseq_)) -> X (_htransseq_ U (_htransseq_ && _hready_ && X(_htransseq_ U (_htransseq_ && _hready_ && X(_htransseq_ U _hready_))))))"], "If _SYMBOL0_ and _SYMBOL1_, HTRANS shall be IDLE in next cycle.": ["G (((_SYMBOL0_) && (_SYMBOL1_)) -> X (_htransidle_))", "(((G ((_SYMBOL0_) && (_SYMBOL1_))) -> X (_htransidle_)))", "((_SYMBOL0_) && (_SYMBOL1_)) -> X (_htransidle_)"], "If _SYMBOL0_, then _SYMBOL1_.": ["G ((_SYMBOL0_) -> (_SYMBOL1_))", "G ((_SYMBOL0_) -> (_SYMBOL1_))", "G ((_SYMBOL0_) -> (_SYMBOL1_))"], "If _SYMBOL0_, then _SYMBOL1_": ["G ((_SYMBOL0_) -> (_SYMBOL1_))"], "When the slave is not selected by the decoder, HREADY signal shall be high.": ["(!(_hsel_) -> (_hready_))", "G ((!(_hsel_) && !(_htransidle_)) -> (_hready_))", "G ((!(_hsel_) && !(_start_)) -> (_hready_))"], "When _SYMBOL0_, _SYMBOL1_": ["G ((_SYMBOL0_) -> (_SYMBOL1_))"], "_SYMBOL0_, _SYMBOL1_": ["((_SYMBOL0_) && (_SYMBOL1_))", "((_SYMBOL0_) && (_SYMBOL1_))", "((_SYMBOL0_) && (_SYMBOL1_))"], "RD and WR signal cannot be high simultaneously.": ["G (_hsel_ -> ( (_wr_ -> !_rd_) && (_rd_ -> !_wr_)))"], "If _SYMBOL0_, then _SYMBOL1_. Similarly, if the _SYMBOL2_, then _SYMBOL1_.": ["G (((_SYMBOL0_) -> (_SYMBOL1_)) && ((_SYMBOL2_) -> (_SYMBOL1_)))"], "When slave is involved in a transfer, HWRITE is used to decide values of WR and RD.": ["G ((_htransidle_ || _htransnonseq_ || _htransseq_) -> ((_hwrite_) -> ((_wr_) && (_rd_))))", "G ((_htransidle_ && _hburstsingle_) -> ((_hwrite_) -> ((_wr_) && (_rd_))))"], "_SYMBOL0_, _SYMBOL1_.": ["((_SYMBOL0_) && (_SYMBOL1_))", "((_SYMBOL0_) && (_SYMBOL1_))", "((_SYMBOL0_) && (_SYMBOL1_))"], "the slave is not selected by the decoder": ["!(_hsel_)"], "all control signals shall be low": ["_htransidle_ && (_hburstsingle_) && !_hwrite_ && !_start_ && !_last_"], "HTRANS is IDLE": ["(_htransidle_)"], "this is last transaction of a sequence": ["_last_"], "next cycle is not start of another sequence": ["X (!(_start_))"], "HREADY is low": ["!(_hready_)"], "all control signals, address and data buses shall hold their values": ["0", "0", "0"], "_SYMBOL0_,_SYMBOL1__SYMBOL2_": ["((_SYMBOL0_) && (_SYMBOL1_) && (_SYMBOL2_))", "(((_SYMBOL0_) && (_SYMBOL1_)) && (_SYMBOL2_))", "((_SYMBOL0_) && (_SYMBOL1_) && (_SYMBOL2_))"], "all control signals, address and data buses shall hold their values.": ["((_htransnonseq_ <-> X_htransnonseq_) && (_htransseq_ <-> X_htransseq_) && (_htransidle_ <-> X_htransidle_) && (_hburstsingle_ <-> X_hburstsingle_) && (_hburstincr4_ <-> X_hburstincr4_) && (_hburstincr_ <-> X_hburstincr_) && ((_haddri_) <-> X (_haddri_)) && ((_hwdatai_) <-> X (_hwdatai_)) && ((_doi_) <-> X (_doi_)))"], "HREADY signal shall be high": ["_hready_"], "HRESP shall be OKAY.": ["_hrespokay_"], "no AHB transaction is taking place": ["_htransidle_"], "When no AHB transaction is taking place": ["G (!(_htransidle_ || _hburstsingle_ || _hwrite_ || _start_ || _last_ || _hsel_ || _htransnonseq_ || _hready_ || _htransseq_ || _hlock_ || _hburstincr4_ || _hburstincr_ || _haddri_ || _hwdatai_ || _doi_ || _hrespokay_ || _wr_ || _rd_ || _full_ || _hresperror_ || _empty_ || _addri_ || _dii_ || _hrdatai_))", "!((_htransidle_) || (_hburstsingle_) || (_hwrite_) || (_start_) || (_last_) || (_hsel_) || (_htransnonseq_) || (_hready_) || (_htransseq_) || (_hlock_) || (_hburstincr4_) || (_hburstincr_) || (_haddri_) || (_hwdatai_) || (_doi_) || (_hrespokay_) || (_wr_) || (_rd_) || (_full_) || (_hresperror_) || (_empty_) || (_addri_) || (_dii_) || (_hrdatai_))", "G (!(_htransidle_) && !(_hburstsingle_) && !(_hwrite_) && !(_start_) && !(_last_) && !(_hsel_) && !(_htransnonseq_) && !(_hready_) && !(_htransseq_) && !(_hlock_) && !(_hburstincr4_) && !(_hburstincr_) && !(_haddri_) && !(_hwdatai_) && !(_doi_) && !(_hrespokay_) && !(_wr_) && !(_rd_) && !(_full_) && !(_hresperror_) && !(_empty_) && !(_addri_) && !(_dii_) && !(_hrdatai_))"], "_SYMBOL0_ and _SYMBOL1_": ["((_SYMBOL0_) && (_SYMBOL1_))"], "the slave shall send an ERROR response": ["_hresperror_"], "slave is involved in a transfer": ["_hsel_ && ((_htransnonseq_) || (_htransseq_))"], "When slave is involved in any transfer": ["G ((_htransidle_ || _hburstsingle_ || _hwrite_ || _htransnonseq_ || _htransseq_ || _hlock_ || _hburstincr4_ || _hburstincr_ || _haddri_ || _hwdatai_ || _doi_ || _hrespokay_ || _wr_ || _rd_ || _addri_ || _dii_ || _hrdatai_) -> (_hsel_))", "G ((_htransidle_) -> ((_hburstsingle_) || (_hwrite_) || (_htransnonseq_) || (_htransseq_) || (_hburstincr4_) || (_hburstincr_) || (_haddri_) || (_hwdatai_) || (_doi_) || (_hrespokay_) || (_wr_) || (_rd_) || (_hresperror_) || (_addri_) || (_dii_) || (_hrdatai_)))", "G ((_hsel_) -> (F ((_htransidle_) || (_hburstsingle_) || (_hwrite_) || (_htransnonseq_) || (_htransseq_) || (_hlock_) || (_hburstincr4_) || (_hburstincr_) || (_haddri_) || (_hwdatai_) || (_doi_) || (_hrespokay_) || (_wr_) || (_rd_) || (_full_) || (_hresperror_) || (_empty_) || (_addri_) || (_dii_) || (_hrdatai_))))"], "signal HADDR is used to decide ADDR": ["(_haddri_) <-> (_addri_)"], "slave is involved in any transfer": ["_hsel_ && ((_htransnonseq_) || (_htransseq_))"], "slave is involved in write transfer": ["_hsel_ && ((_htransnonseq_) || (_htransseq_)) && _hwrite_"], "signal HWDATA is used to decide DI.": ["(_hwdatai_) <-> (_dii_)"], "signal HWDATA is used to decide DI": ["G ((_hwdatai_) -> (_dii_))", "G ((_hwdatai_) -> (_dii_))", "G ((_hwdatai_) -> (_dii_))"], "slave is involved in read transfer": ["_hsel_ && ((_htransnonseq_) || (_htransseq_)) && !_hwrite_"], "signal DO is used to decide HRDATA": ["(_doi_) <-> (_hrdatai_)"], "all control signals": ["((_htransidle_) && (_hburstsingle_) && (_hwrite_) && (_start_) && (_last_) && (_hsel_) && (_htransnonseq_) && (_hready_) && (_htransseq_) && (_hlock_) && (_hburstincr4_) && (_hburstincr_) && (_haddri_) && (_hwdatai_) && (_doi_) && (_hrespokay_) && (_wr_) && (_rd_) && (_full_) && (_hresperror_) && (_empty_) && (_addri_) && (_dii_) && (_hrdatai_) && 1)", "((_htransidle_) && (_hburstsingle_) && (_hwrite_) && (_start_) && (_last_) && (_hsel_) && (_htransnonseq_) && (_hready_) && (_htransseq_) && (_hlock_) && (_hburstincr4_) && (_hburstincr_) && (_haddri_) && (_hwdatai_) && (_doi_) && (_hrespokay_) && (_wr_) && (_rd_) && (_full_) && (_hresperror_) && (_empty_) && (_addri_) && (_dii_) && (_hrdatai_))", "((_htransidle_) && (_hburstsingle_) && (_hwrite_) && (_start_) && (_last_) && (_hsel_) && (_htransnonseq_) && (_hready_) && (_htransseq_) && (_hlock_) && (_hburstincr4_) && (_hburstincr_) && (_haddri_) && (_hwdatai_) && (_doi_) && (_hrespokay_) && (_wr_) && (_rd_) && (_full_) && (_hresperror_) && (_empty_) && (_addri_) && (_dii_) && (_hrdatai_))"], "address and data buses shall hold their values": ["(((_addri_) <-> X (_addri_)) && ((_dii_) <-> X (_dii_)))", "(((_addri_) <-> X (_addri_)) && ((_dii_) <-> X (_dii_)) && ((_addri_) && (_dii_)))"], " address and data buses": ["((_addri_) && (_dii_))", "((_addri_) && (_dii_))", "((_addri_) && (_dii_))"], " _SYMBOL0_ and _SYMBOL1_ buses": ["((_SYMBOL0_) && (_SYMBOL1_))", "((_SYMBOL0_) && (_SYMBOL1_))", "((_SYMBOL0_) && (_SYMBOL1_))"], "memory is full": ["(_full_)"], "write transfer is attempted": ["_hsel_ && _wr_"], "memory is empty": ["(_empty_)"], "a read transfer is attempted": ["_hsel_ && _rd_"], "HWRITE is used to decide values of WR": ["((_hwrite_) -> (_wr_))", "G ((_hwrite_) -> (_wr_))", "((_hwrite_) -> (_wr_))"], "RD": ["(_rd_)", "(_rd_)", "(_rd_)"], "address": ["(_addri_)", "(_addri_)", "(_addri_)"], "data": ["(_hwdatai_)", "(_hwdatai_)", "(_dii_)"], " shall hold their values": ["0"], "HTRANS shall be IDLE in next cycle": ["X (_htransidle_)"], "If _SYMBOL0_, _SYMBOL1_.": ["G ((_SYMBOL0_) -> (_SYMBOL1_))"], "HWRITE is used to decide values of WR and RD": ["(_hwrite_ -> _wr_) && (!_hwrite_ -> _rd_)"]}